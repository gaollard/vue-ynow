{"version":3,"sources":["webpack:///./node_modules/_babel-runtime@6.26.0@babel-runtime/helpers/asyncToGenerator.js","webpack:///./node_modules/_regenerator-runtime@0.11.1@regenerator-runtime/runtime-module.js","webpack:///src/views/register/index.vue","webpack:///./src/views/register/index.vue?e3fd","webpack:///./src/views/register/index.vue","webpack:///./node_modules/_regenerator-runtime@0.11.1@regenerator-runtime/runtime.js","webpack:///./node_modules/_babel-runtime@6.26.0@babel-runtime/regenerator/index.js"],"names":["exports","__esModule","obj","_promise","__webpack_require__","_promise2","default","fn","gen","apply","this","arguments","resolve","reject","step","key","arg","info","value","error","done","then","err","g","Function","hadRuntime","regeneratorRuntime","Object","getOwnPropertyNames","indexOf","oldRuntime","undefined","module","e","vue_esm","use","field","es_button","register","data","userInfo","mobile","password","nickname","avatar","loading","methods","handleClick","_this","asyncToGenerator_default","regenerator_default","a","mark","_callee","wrap","_context","prev","next","ynow","res","errCode","js_cookie_default","set","token","store_legacy_default","$router","go","toast","errMsg","finally","stop","views_register","render","_vm","_h","$createElement","_c","_self","staticClass","attrs","placeholder","model","callback","$$v","expression","_v","type","size","on","click","to","staticRenderFns","Component","normalizeComponent","ssrContext","__webpack_exports__","global","Op","prototype","hasOwn","hasOwnProperty","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","inModule","runtime","GenStateSuspendedStart","GenStateSuspendedYield","GenStateExecuting","GenStateCompleted","ContinueSentinel","IteratorPrototype","getProto","getPrototypeOf","NativeIteratorPrototype","values","call","Gp","GeneratorFunctionPrototype","Generator","create","GeneratorFunction","constructor","displayName","isGeneratorFunction","genFun","ctor","name","setPrototypeOf","__proto__","awrap","__await","defineIteratorMethods","AsyncIterator","async","innerFn","outerFn","self","tryLocsList","iter","result","toString","keys","object","push","reverse","length","pop","Context","reset","skipTempReset","sent","_sent","delegate","method","tryEntries","forEach","resetTryEntry","charAt","isNaN","slice","rootRecord","completion","rval","dispatchException","exception","context","handle","loc","caught","record","i","entry","tryLoc","hasCatch","hasFinally","catchLoc","finallyLoc","Error","abrupt","finallyEntry","complete","afterLoc","finish","catch","thrown","delegateYield","iterable","resultName","nextLoc","protoGenerator","generator","_invoke","state","doneResult","delegateResult","maybeInvokeDelegate","tryCatch","makeInvokeMethod","previousPromise","callInvokeWithMethodAndArg","Promise","invoke","unwrapped","return","TypeError","pushTryEntry","locs","iteratorMethod"],"mappings":"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","file":"static/js/7.9c14eeb44ec8214b41f8.js","sourcesContent":["\"use strict\";\n\nexports.__esModule = true;\n\nvar _promise = require(\"../core-js/promise\");\n\nvar _promise2 = _interopRequireDefault(_promise);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = function (fn) {\n  return function () {\n    var gen = fn.apply(this, arguments);\n    return new _promise2.default(function (resolve, reject) {\n      function step(key, arg) {\n        try {\n          var info = gen[key](arg);\n          var value = info.value;\n        } catch (error) {\n          reject(error);\n          return;\n        }\n\n        if (info.done) {\n          resolve(value);\n        } else {\n          return _promise2.default.resolve(value).then(function (value) {\n            step(\"next\", value);\n          }, function (err) {\n            step(\"throw\", err);\n          });\n        }\n      }\n\n      return step(\"next\");\n    });\n  };\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/_babel-runtime@6.26.0@babel-runtime/helpers/asyncToGenerator.js\n// module id = J0Oq\n// module chunks = 6 7","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n// This method of obtaining a reference to the global object needs to be\n// kept identical to the way it is obtained in runtime.js\nvar g = (function() { return this })() || Function(\"return this\")();\n\n// Use `getOwnPropertyNames` because not all browsers support calling\n// `hasOwnProperty` on the global `self` object in a worker. See #183.\nvar hadRuntime = g.regeneratorRuntime &&\n  Object.getOwnPropertyNames(g).indexOf(\"regeneratorRuntime\") >= 0;\n\n// Save the old regeneratorRuntime in case it needs to be restored later.\nvar oldRuntime = hadRuntime && g.regeneratorRuntime;\n\n// Force reevalutation of runtime.js.\ng.regeneratorRuntime = undefined;\n\nmodule.exports = require(\"./runtime\");\n\nif (hadRuntime) {\n  // Restore the original runtime.\n  g.regeneratorRuntime = oldRuntime;\n} else {\n  // Remove the global property added by runtime.js.\n  try {\n    delete g.regeneratorRuntime;\n  } catch(e) {\n    g.regeneratorRuntime = undefined;\n  }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/_regenerator-runtime@0.11.1@regenerator-runtime/runtime-module.js\n// module id = XqSp\n// module chunks = 6 7","<template>\n  <div class=\"view-register\">\n    <div class=\"login-form\">\n      <van-cell-group>\n        <van-field v-model=\"mobile\" placeholder=\"输入手机号码\" />\n        <van-field\n          v-model=\"password\"\n          placeholder=\"输入登录密码\"\n          type=\"password\"\n        />\n      </van-cell-group>\n      <van-button\n        class=\"login-button\"\n        type=\"primary\"\n        size=\"large\"\n        :loading=\"loading\"\n        @click=\"handleClick\"\n        >立即注册</van-button\n      >\n      <div class=\"btm-wrap\">\n        <!-- <p class=\"tip-text\">上述账户为测试账户</p> -->\n        <div class=\"register-wrap\">\n          <span>已有账户？</span>\n          <router-link class=\"register-link\" to=\"/login\">登录</router-link>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport Vue from 'vue'\nimport ynowApi from '../../api/ynow'\nimport { Field, Button, Toast } from 'vant'\nimport cookies from 'js-cookie'\nimport store from 'store'\n\nVue.use(Field).use(Button)\n\nexport default {\n  data () {\n    return {\n      userInfo: null,\n      mobile: '',\n      password: '',\n      nickname: '',\n      avatar: '',\n      loading: false\n    }\n  },\n  methods: {\n    async handleClick () {\n      this.loading = true\n      ynowApi\n        .register({\n          mobile: this.mobile,\n          password: this.password\n        })\n        .then(res => {\n          if (+res.errCode === 0) {\n            cookies.set('token', res.data.token)\n            store.set('userInfo', res.data)\n            this.$router.go(-1)\n          } else {\n            Toast(res.errMsg)\n          }\n        })\n        .finally(() => {\n          this.loading = false\n        })\n    }\n  }\n}\n</script>\n\n<style lang=\"scss\" scoped>\n.login-form {\n  padding: 12px;\n}\n.login-button {\n  margin-top: 20px;\n}\n.tip-text {\n  float: left;\n  margin-top: 10px;\n}\n.btm-wrap {\n  color: #999;\n  font-size: 14px;\n}\n.register-wrap {\n  float: right;\n  margin-top: 10px;\n}\n.register-link {\n  color: #07c160;\n}\n</style>\n\n\n\n// WEBPACK FOOTER //\n// src/views/register/index.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"view-register\"},[_c('div',{staticClass:\"login-form\"},[_c('van-cell-group',[_c('van-field',{attrs:{\"placeholder\":\"输入手机号码\"},model:{value:(_vm.mobile),callback:function ($$v) {_vm.mobile=$$v},expression:\"mobile\"}}),_vm._v(\" \"),_c('van-field',{attrs:{\"placeholder\":\"输入登录密码\",\"type\":\"password\"},model:{value:(_vm.password),callback:function ($$v) {_vm.password=$$v},expression:\"password\"}})],1),_vm._v(\" \"),_c('van-button',{staticClass:\"login-button\",attrs:{\"type\":\"primary\",\"size\":\"large\",\"loading\":_vm.loading},on:{\"click\":_vm.handleClick}},[_vm._v(\"立即注册\")]),_vm._v(\" \"),_c('div',{staticClass:\"btm-wrap\"},[_c('div',{staticClass:\"register-wrap\"},[_c('span',[_vm._v(\"已有账户？\")]),_vm._v(\" \"),_c('router-link',{staticClass:\"register-link\",attrs:{\"to\":\"/login\"}},[_vm._v(\"登录\")])],1)])],1)])}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/_vue-loader@13.7.3@vue-loader/lib/template-compiler?{\"id\":\"data-v-330db5ea\",\"hasScoped\":true,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/_vue-loader@13.7.3@vue-loader/lib/selector.js?type=template&index=0!./src/views/register/index.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../../../node_modules/_extract-text-webpack-plugin@3.0.2@extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../../node_modules/_vue-loader@13.7.3@vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-330db5ea\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!sass-loader?{\\\"sourceMap\\\":true}!../../../node_modules/_vue-loader@13.7.3@vue-loader/lib/selector?type=styles&index=0!./index.vue\")\n}\nvar normalizeComponent = require(\"!../../../node_modules/_vue-loader@13.7.3@vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../../node_modules/_vue-loader@13.7.3@vue-loader/lib/selector?type=script&index=0!./index.vue\"\nimport __vue_script__ from \"!!babel-loader!../../../node_modules/_vue-loader@13.7.3@vue-loader/lib/selector?type=script&index=0!./index.vue\"\n/* template */\nimport __vue_template__ from \"!!../../../node_modules/_vue-loader@13.7.3@vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-330db5ea\\\",\\\"hasScoped\\\":true,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../../node_modules/_vue-loader@13.7.3@vue-loader/lib/selector?type=template&index=0!./index.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = \"data-v-330db5ea\"\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/views/register/index.vue\n// module id = null\n// module chunks = ","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n!(function(global) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  var inModule = typeof module === \"object\";\n  var runtime = global.regeneratorRuntime;\n  if (runtime) {\n    if (inModule) {\n      // If regeneratorRuntime is defined globally and we're in a module,\n      // make the exports object identical to regeneratorRuntime.\n      module.exports = runtime;\n    }\n    // Don't bother evaluating the rest of this file if the runtime was\n    // already defined globally.\n    return;\n  }\n\n  // Define the runtime globally (as expected by generated code) as either\n  // module.exports (if we're in a module) or a new, empty object.\n  runtime = global.regeneratorRuntime = inModule ? module.exports : {};\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  runtime.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  IteratorPrototype[iteratorSymbol] = function () {\n    return this;\n  };\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;\n  GeneratorFunctionPrototype.constructor = GeneratorFunction;\n  GeneratorFunctionPrototype[toStringTagSymbol] =\n    GeneratorFunction.displayName = \"GeneratorFunction\";\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      prototype[method] = function(arg) {\n        return this._invoke(method, arg);\n      };\n    });\n  }\n\n  runtime.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  runtime.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      if (!(toStringTagSymbol in genFun)) {\n        genFun[toStringTagSymbol] = \"GeneratorFunction\";\n      }\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  runtime.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return Promise.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return Promise.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration. If the Promise is rejected, however, the\n          // result for this iteration will be rejected with the same\n          // reason. Note that rejections of yielded Promises are not\n          // thrown back into the generator function, as is the case\n          // when an awaited Promise is rejected. This difference in\n          // behavior between yield and await is important, because it\n          // allows the consumer to decide what to do with the yielded\n          // rejection (swallow it and continue, manually .throw it back\n          // into the generator, abandon iteration, whatever). With\n          // await, by contrast, there is no opportunity to examine the\n          // rejection reason outside the generator function, so the\n          // only option is to throw it from the await expression, and\n          // let the generator function handle the exception.\n          result.value = unwrapped;\n          resolve(result);\n        }, reject);\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new Promise(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  AsyncIterator.prototype[asyncIteratorSymbol] = function () {\n    return this;\n  };\n  runtime.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  runtime.async = function(innerFn, outerFn, self, tryLocsList) {\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList)\n    );\n\n    return runtime.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        if (delegate.iterator.return) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  Gp[toStringTagSymbol] = \"Generator\";\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  Gp[iteratorSymbol] = function() {\n    return this;\n  };\n\n  Gp.toString = function() {\n    return \"[object Generator]\";\n  };\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  runtime.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  runtime.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n})(\n  // In sloppy mode, unbound `this` refers to the global object, fallback to\n  // Function constructor if we're in global strict mode. That is sadly a form\n  // of indirect eval which violates Content Security Policy.\n  (function() { return this })() || Function(\"return this\")()\n);\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/_regenerator-runtime@0.11.1@regenerator-runtime/runtime.js\n// module id = k9rz\n// module chunks = 6 7","module.exports = require(\"regenerator-runtime\");\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/_babel-runtime@6.26.0@babel-runtime/regenerator/index.js\n// module id = lC5x\n// module chunks = 6 7"],"sourceRoot":""}